"""
计算机要存储、计算十进制数，要先把十进制转为二进制，计算后再把二进制转为十进制数。
但对于小数而言，二进制能表示的基数由1/2、1/4、1/8、1/16......这些组成，所以必定有一部分小数无法表示，
这也是计算机中浮点数精度缺失的根本原因所在。浮点数具体的存储标准需要参考IEEE 754。
对于一些要求精确计算的场合（比如numpy），一种解决方法是将小数扩大为整数，比如将 0.15 变成 15，这样表示起来就不会有误差
"""
import numpy as np

x = [0.15, 0.15, 0.20, 0.20, 0.00, 0.00, 0.20, 0.10, 0.00]
print(sum(x))  # 0.9999999999999999

y = np.array([0.15, 0.15, 0.20, 0.20, 0.00, 0.00, 0.20, 0.10, 0.00])
print(y.sum())  # 1.0
